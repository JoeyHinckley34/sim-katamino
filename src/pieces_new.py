
# TODO these strings become numeric arrays to avoid conversions
PIECES_NEW = [
    {'name': 1, 'color': [244, 117, 33], 'origin': [0, 3],
     'draws': [[0, 0, 0, 1], [1, 1, 1, 2], [2, 2, 2, 3], [3, 3, 3, 0], [0, 0, 0, 3], [1, 1, 1, 0], [2, 2, 2, 1], [3, 3, 3, 2]]},
    {'name': 2, 'color': [119, 192, 66], 'origin': [0, 2],
     'draws': ['1,0,1,0', '2,1,2,1', '3,2,3,2', '0,3,0,3', '3,0,3,0', '0,1,0,1', '1,2,1,2', '2,3,2,3']},
    {'name': 3, 'color': [255, 234, 1], 'origin': [0, 1],
     'draws': ['0,1,1,2', '1,2,2,3', '2,3,3,0', '3,0,0,1', '0,3,3,2', '1,0,0,3', '2,1,1,0', '3,2,2,1']},
    {'name': 4, 'color': [56, 46, 141], 'origin': [0, 0],
     'draws': ['1,1,2,1', '2,2,3,2', '3,3,0,3', '0,0,1,0', '3,3,2,3', '0,0,3,0', '3,2,3,3', '0,3,0,0']},
    {'name': 5, 'color': [208, 108, 170], 'origin': [0, 1],
     'draws': ['1,1,0,3', '2,2,1,0', '3,3,2,1', '0,0,3,2', '3,3,0,1', '0,0,1,2', '1,1,2,3', '2,2,3,0']},
    {'name': 6, 'color': [0, 176, 211], 'origin': [2, 2],
     'draws': ['3,0,0,3', '0,1,1,0', '1,2,2,1', '2,3,3,2', '1,0,0,1', '2,1,1,2', '3,2,2,3', '0,3,3,0']},
    {'name': 7, 'color': [0, 167, 78], 'origin': [0, 0],
     'draws': ['11322', '22033', '33100', '00211', '33122', '00233', '11300', '22011']},
    {'name': 8, 'color': [113, 55, 31], 'origin': [0, 1],
     'draws': ['10211', '21322', '32033', '03100', '30233', '01300', '12011',  '23122']},
    {'name': 9, 'color': [60, 123, 191], 'origin': [0, 0],
     'draws': ['1111', '2222', '3333', '0000', '3333', '0000', '1111', '2222']},
    {'name': 10, 'color': [237, 26, 56], 'origin': [1, 0],
     'draws': ['220311', '220311', '220311', '220311', '220311', '220311', '220311', '220311']},
    {'name': 11, 'color': [120, 133, 140], 'origin': [0, 0],
     'draws': ['30310', '01021', '12132', '23203', '10130', '21201', '32312', '03023']},
    {'name': 12, 'color': [15, 160, 219], 'origin': [0, 1],
     'draws': ['1122', '0011', '3300', '2233', '3322', '2211', '1100', '0033', '3323']},
]

_OFS = [[0, -1], [1, 0], [0, 1], [-1, 0]]


def place_piece(board, piece, x, y, rot):
    good = True
    placed = []
    token = piece['name']
    for d in piece['draws'][rot]:
        if board[y][x] != 0 and board[y][x] != token:
            good = False
            break
        board[y][x] = token
        placed.append((x, y))
        ofs = _OFS[d]
        x += ofs[0]
        y += ofs[1]
    if good:
        return True
    for s in placed:
        board[s[1]][s[0]] = 0
